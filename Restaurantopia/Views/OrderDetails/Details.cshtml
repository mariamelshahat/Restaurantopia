@model Restaurantopia.Entities.Models.OrderDetails

@{
    ViewData["Title"] = "Details";
    Layout = "_HomeLayout";// Set the layout to match the Item Details page
}

<section class="book_section layout_padding">
    <div class="container">
        <div class="heading_container">
            <h2>Order Details</h2> <!-- Updated heading -->
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form_container">

                    <!-- Order ID -->
                    <div class="form-floating mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Id)</label>
                        <input class="form-control" value="@Html.DisplayFor(model => model.Id)" readonly />
                    </div>

                    <!-- Item Title -->
                    <div class="form-floating mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Item.ItemTitle)</label>
                        <input class="form-control" value="@Html.DisplayFor(model => model.Item.ItemTitle)" readonly />
                    </div>

                    <!-- Total Price -->
                    <div class="form-floating mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Total)</label>
                        <input class="form-control" value="@Html.DisplayFor(model => model.Total)" readonly />
                    </div>

                    <!-- Order Date -->
                    <div class="form-floating mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Date)</label>
                        <input class="form-control" value="@Html.DisplayFor(model => model.Date)" readonly />
                    </div>

                    <!-- Quantity -->
                    <div class="form-floating mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Quantity)</label>
                        <input class="form-control" value="@Html.DisplayFor(model => model.Quantity)" readonly />
                    </div>

                    <!-- Item Image -->
                    <!-- Item Image -->
                    <div class="mb-3">
                        <label class="form-label styled-label">@Html.DisplayNameFor(model => model.Item.clientFile)</label>
                        <div class="image-container">
                            @* @if (string.IsNullOrEmpty(Model.Item.imageSrc)) // Check if imageSrc is null or empty
                            {
                                <img src="/Images/no-image.webp" alt="No Image Available" class="img-fluid img-thumbnail" />
                            }
                            else
                            {
                                <img src="@Url.Content(Model.Item.imageSrc)" alt="Item Image" class="img-fluid img-thumbnail" />
                            } *@

                            @if (Model.Item != null) // First check if Model.Item is not null
                            {
                                if (string.IsNullOrEmpty(Model.Item.imageSrc)) // Check if imageSrc is null or empty
                                {
                                    <img src="/Images/no-image.webp" alt="No Image Available" class="img-fluid img-thumbnail" />
                                }
                                else
                                {
                                    <img src="@Url.Content(Model.Item.imageSrc)" alt="Item Image" class="img-fluid img-thumbnail" />
                                }
                            }
                            else
                            {
                                <img src="/Images/no-image.webp" alt="No Image Available" class="img-fluid img-thumbnail" />
                            }
                        </div>
                    </div>


                    <!-- Action Links -->
                    <div class="btn_box">
                        
                        <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index")'">
                            Back to List
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .image-container {
        max-width: 300px;
        max-height: 300px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add subtle shadow */
    }

    .image-container img {
        width: 100%;
        height: auto;
        object-fit: cover; /* Ensures the image covers the container without distortion */
        border-radius: 10px;
    }

    .styled-label {
        font-size: 1.25rem; /* Increase font size */
        font-weight: 600; /* Make text bold */
        color: #333; /* Darker text color for better readability */
        text-transform: uppercase; /* Make the label text uppercase */
        letter-spacing: 0.05rem; /* Add some spacing between letters */
        margin-bottom: 10px; /* Add space below the label */
        display: inline-block; /* Ensures label behaves like a block element */
    }

    .btn_box {
        margin-top: 20px; /* Add spacing above the button box */
    }
</style>
