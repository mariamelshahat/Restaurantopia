@model IEnumerable<Restaurantopia.Entities.Models.Item>
@using Microsoft.AspNetCore.Identity;
@using Restaurantopia.Entities.Models
@inject SignInManager<IdentityUser> signInManager;

@{
    ViewData["Title"] = "Menu";
    Layout = "_MenuPage";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<div class="filters-content">
    <!-- Search Bar -->
    <div class="col-md-12 mb-3">
        <form asp-action="Menu" method="get" class="d-inline">
            <div class="input-group custom-search-group">
                <input type="text" name="searchQuery" class="form-control custom-search-input" placeholder="Search by Item Name" value="@ViewBag.SearchQuery" />
                <button type="submit" class="btn custom-search-btn">Search</button>
            </div>
        </form>
    </div>

    <!-- Menu Grid -->
    <div class="row grid">
        @foreach (var item in Model)
        {
            <div class="col-sm-6 col-lg-4 all pizza">
                <div class="box">
                    <div class="img-box">
                        @if (item.imageSrc == null || item.imageSrc == "")
                        {
                            <img src="\Images\no-image.webp" alt="NOImage" width="100%" height="100%" style="padding: 0; margin: 0; border: none;" />
                        }
                        else
                        {
                            <img src="@item.imageSrc" alt="NOImage" width="100%" height="100%" style="padding: 0; margin: 0; border: none;" />
                        }
                    </div>

                    <div class="detail-box">
                        <h5>@item.ItemTitle</h5>
                        <p>@item.ItemDescription</p>
                        <div class="options">
                            <h6>$@item.ItemPrice</h6>
                        </div>
                        @if (User.IsInRole(RolesNames.roleAdmin))
                        {
                            <div class="options">
                                @Html.ActionLink("", "Edit", new { id = item.Id }, new { @class = "bi bi-pencil icon-white" }) |
                                @Html.ActionLink("", "Details", new { id = item.Id }, new { @class = "bi bi-eye icon-white" }) |
                                @Html.ActionLink("", "Delete", new { id = item.Id }, new { @class = "bi bi-trash icon-white" }) |
                                @Html.ActionLink("", "Create", "OrderDetails", new { itemId = item.Id }, new{@class="fa fa-shopping-cart icon-white"})
                            </div>
                        }
                        else if (User.IsInRole(RolesNames.roleCustomer))
                        {
                            <div class="options">
                                @Html.ActionLink("", "Details", new { id = item.Id }, new { @class = "bi bi-eye icon-white" }) |
                                @Html.ActionLink("", "Create", "OrderDetails", new { itemId = item.Id }, new {@class="fa fa-shopping-cart icon-white"})
                            </div>
                        }
                        else
                        {
                            <div class="options" style="display: flex; justify-content: center; align-items: center; height: 100%;">
                                @Html.ActionLink("", "Details", new { id = item.Id }, new { @class = "bi bi-eye icon-white" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Custom CSS -->
<style>
    /* Icon Styles */
    .icon-white {
        color: black;
    }

    /* Search Bar Styling */
    .custom-search-group {
        max-width: 500px; /* Restrict width of the search bar */
        margin: 0 auto; /* Center the search bar */
        border-radius: 50px; /* Rounded edges */
        overflow: hidden; /* Clip the content inside the rounded edges */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow for lifted effect */
    }

    /* Style the input box */
    .custom-search-input {
        padding: 12px 20px; /* Extra padding for comfortable typing */
        font-size: 16px; /* Font size for readability */
        border: none; /* Remove the border */
        flex-grow: 1; /* Allow the input to take up all the available space */
        border-radius: 50px 0 0 50px; /* Rounded left corners */
        transition: box-shadow 0.3s ease; /* Smooth transition for focus effect */
        height: 100%; /* Match height with the button */
    }

    /* Style the search button */
    .custom-search-btn {
        background-color: #ffc107; /* Yellow color */
        color: white; /* White text */
        border: none; /* Remove default border */
        padding: 12px 20px; /* Padding for better button size */
        font-size: 16px; /* Font size for readability */
        font-weight: 600; /* Slightly bold text */
        border-radius: 0 50px 50px 0; /* Rounded right corners */
        cursor: pointer; /* Pointer cursor for button */
        transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth hover and focus transitions */
        height: 100%; /* Match height with the input */
    }

    /* Hover effect for the button */
    .custom-search-btn:hover {
        background-color: #e0a800; /* Darker yellow on hover */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Slight shadow on hover */
    }

    /* Focus effect for the input */
    .custom-search-input:focus {
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Blue shadow on focus */
        outline: none; /* Remove default focus outline */
    }

</style>
